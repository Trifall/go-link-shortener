services:
  db:
    image: postgres:16-alpine
    container_name: go-link-shortener-db
    environment:
      POSTGRES_USER: ${DB_USER:-urlapp}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?DEFINE_ME_IN_ENV}
      POSTGRES_DB: ${DB_NAME:-urlshortener}
      LANG: en_US.UTF-8
      LC_CTYPE: en_US.UTF-8
      LC_COLLATE: en_US.UTF-8
      # set timezone to est
      PGTZ: 'America/New_York'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}", "-p", "5432" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - app-network

  app:
    deploy:
      resources:
        limits:
          memory: 512M
    image: jerrent/go-link-shortener:v1.0.1
    container_name: go-link-shortener
    build: .
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-urlapp}
      DB_PASSWORD: ${DB_PASSWORD:?DEFINE_ME_IN_ENV}
      DB_NAME: ${DB_NAME:-urlshortener}
      DB_SSLMODE: disable
      ROOT_USER_KEY: ${ROOT_USER_KEY:?DEFINE_ME_IN_ENV}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PUBLIC_SITE_URL: ${PUBLIC_SITE_URL:-http://localhost:8080}
      ENABLE_DOCS: ${ENABLE_DOCS:-true}
      SERVER_PORT: ${SERVER_PORT:-8080}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
